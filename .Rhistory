"G" = "Medo sem motivo"
)
# 2. Criar o gráfico com as variáveis corretas de bd
ggplot(bd, aes(x = factor(specie), y = value, fill = factor(P3))) +  # Use 'specie' para sintomas e 'P3' para idade
geom_bar(
stat = "identity",
position = position_dodge2(preserve = "single", width = 0.8),
width = 0.7,
color = "white",  # Bordas brancas para separar as barras
linewidth = 0.3
) +
# Adicionar valores nas barras
geom_text(
aes(label = round(value, 1)),
position = position_dodge2(width = 0.8),
vjust = -0.5,
size = 3,
color = "gray30"
) +
# Escalas e cores
scale_x_discrete(labels = sintomas_labels) +
scale_fill_brewer(
palette = "Set2",
name = "Idade (P3)",
guide = guide_legend(nrow = 1)  # Legenda em linha única
) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +  # Espaço para os labels
# Títulos e tema
labs(
title = "Níveis de Ansiedade por Sintoma e Idade",
subtitle = "Dados originais (sem modificação da base 'bd')",
x = "Sintomas de Ansiedade",
y = "Média das Respostas",
caption = "Fonte: Dados originais | Idade: Variável P3"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, color = "gray40"),
axis.text.x = element_text(angle = 45, hjust = 1, margin = margin(t = -5)),
legend.position = "top",
panel.grid.major.x = element_blank()
)
library(scales)
# 1. Criar rótulos descritivos para os sintomas (A-G)
sintomas_labels <- c(
"A" = "Boca seca",
"B" = "Dificuldade respiratória",
"C" = "Tremores",
"D" = "Medo de constrangimento",
"E" = "Quase pânico",
"F" = "Coração acelerado",
"G" = "Medo sem motivo"
)
# 2. Criar o gráfico diretamente a partir de `bd`
ggplot(bd, aes(x = factor(variable), y = value, fill = factor(P3))) +  # Usar P3 para idade
geom_bar(
stat = "identity",
position = position_dodge2(preserve = "single", width = 0.8),
width = 0.7,
color = "white",  # Bordas brancas para separar as barras
linewidth = 0.3
) +
# Adicionar valores nas barras
geom_text(
aes(label = round(value, 1)),
position = position_dodge2(width = 0.8),
vjust = -0.5,
size = 3,
color = "gray30"
) +
# Escalas e cores
scale_x_discrete(labels = sintomas_labels) +
scale_fill_brewer(
palette = "Set2",
name = "Idade (P3)",
guide = guide_legend(nrow = 1)  # Legenda em linha única
) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +  # Espaço para os labels
# Títulos e tema
labs(
title = "Níveis de Ansiedade por Sintoma e Idade",
subtitle = "Dados originais (sem modificação da base 'bd')",
x = "Sintomas de Ansiedade",
y = "Média das Respostas",
caption = "Fonte: Dados originais | Idade: Variável P3"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, color = "gray40"),
axis.text.x = element_text(angle = 45, hjust = 1, margin = margin(t = -5)),
legend.position = "top",
panel.grid.major.x = element_blank()
)
# Definir os 7 títulos (ou sintomas)
specie <- c(
rep("A", 4),  # 4 repetições para o título "A"
rep("B", 4),  # 4 repetições para o título "B"
rep("C", 4),  # 4 repetições para o título "C"
rep("D", 4),  # 4 repetições para o título "D"
rep("E", 4),  # 4 repetições para o título "E"
rep("F", 4),  # 4 repetições para o título "F"
rep("G", 4)   # 4 repetições para o título "G"
)
# Verificar o comprimento de 'specie'
length(specie)  # Deve retornar 28 (7 títulos * 4 géneros)
# Verifique se bd$P3 existe e não está vazio
if (exists("bd") && !is.null(bd$P3)) {
# Replicar 'bd$P3' para corresponder ao comprimento de 'specie' (4 géneros por título)
condition <- rep(bd$P3, length.out = length(specie))
} else {
stop("bd$P3 não está disponível ou está vazio.")
}
# Calcular as médias das colunas de ansiedade
mean_values <- c(
mean(bd$v38_ansiedade, na.rm = TRUE),
mean(bd$v40_ansiedade, na.rm = TRUE),
mean(bd$v43_ansiedade, na.rm = TRUE),
mean(bd$v45_ansiedade, na.rm = TRUE),
mean(bd$v51_ansiedade, na.rm = TRUE),
mean(bd$v55_ansiedade, na.rm = TRUE),
mean(bd$v56_ansiedade, na.rm = TRUE)
)
# Replicar as médias para corresponder ao comprimento de 'specie'
value <- rep(mean_values, length.out = length(specie))
# Criar o dataframe
data <- data.frame(specie, condition, value)
# Verifique a estrutura dos dados
str(data)
# Criar o gráfico de barras agrupadas
ggplot(data, aes(fill = condition, y = value, x = specie)) +
geom_bar(stat = "identity", position = "dodge") +  # Usar barras agrupadas
labs(
title = "Níveis de Ansiedade por Idade",
x = "Sintomas",
y = "Média de Ansiedade"
) +
theme_minimal(base_size = 12)+
scale_fill_gradient(
low = "#f0f9e8",
high = "#08589e",
)
# Um tema mais simples
sintomas_labels <- c(
"A" = "Boca seca",
"B" = "Dificuldade respiratória",
"C" = "Tremores",
"D" = "Medo de constrangimento",
"E" = "Quase pânico",
"F" = "Coração acelerado",
"G" = "Medo sem motivo"
)
# 2. Criar o gráfico com as variáveis corretas de bd
ggplot(bd, aes(x = factor(specie), y = value, fill = factor(P3))) +  # Use 'specie' para sintomas e 'P3' para idade
geom_bar(
stat = "identity",
position = position_dodge2(preserve = "single", width = 0.8),
width = 0.7,
color = "white",  # Bordas brancas para separar as barras
linewidth = 0.3
) +
# Adicionar valores nas barras
geom_text(
aes(label = round(value, 1)),
position = position_dodge2(width = 0.8),
vjust = -0.5,
size = 3,
color = "gray30"
) +
# Escalas e cores
scale_x_discrete(labels = sintomas_labels) +
scale_fill_brewer(
palette = "Set2",
name = "Idade (P3)",
guide = guide_legend(nrow = 1)  # Legenda em linha única
) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +  # Espaço para os labels
# Títulos e tema
labs(
title = "Níveis de Ansiedade por Sintoma e Idade",
subtitle = "Dados originais (sem modificação da base 'bd')",
x = "Sintomas de Ansiedade",
y = "Média das Respostas",
caption = "Fonte: Dados originais | Idade: Variável P3"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, color = "gray40"),
axis.text.x = element_text(angle = 45, hjust = 1, margin = margin(t = -5)),
legend.position = "top",
panel.grid.major.x = element_blank()
)
library(ggplot2)
library(scales)
# 1. Criar um dataframe agregado (sem modificar bd)
dados_grafico <- data.frame(
sintoma = rep(c("A", "B", "C", "D", "E", "F", "G"), each = length(unique(bd$P3))),
idade = rep(unique(bd$P3), times = 7),
media_ansiedade = c(
mean(bd$v38_ansiedade, na.rm = TRUE),
mean(bd$v40_ansiedade, na.rm = TRUE),
mean(bd$v43_ansiedade, na.rm = TRUE),
mean(bd$v45_ansiedade, na.rm = TRUE),
mean(bd$v51_ansiedade, na.rm = TRUE),
mean(bd$v55_ansiedade, na.rm = TRUE),
mean(bd$v56_ansiedade, na.rm = TRUE)
)
)
# 2. Rótulos descritivos
sintomas_labels <- c(
"A" = "Boca seca", "B" = "Falta de ar", "C" = "Tremores",
"D" = "Medo social", "E" = "Quase pânico",
"F" = "Coração acelerado", "G" = "Medo sem motivo"
)
# 3. Criar o gráfico
ggplot(dados_grafico, aes(x = sintoma, y = media_ansiedade, fill = factor(idade))) +
geom_bar(
stat = "identity",
position = position_dodge(preserve = "single"),
width = 0.7
) +
geom_text(
aes(label = round(media_ansiedade, 1)),
position = position_dodge(width = 0.7),
vjust = -0.5,
size = 3
) +
scale_x_discrete(labels = sintomas_labels) +
scale_fill_brewer(palette = "Set2", name = "Idade") +
labs(
title = "Média de Ansiedade por Sintoma e Idade",
x = "Sintomas",
y = "Média de Ansiedade"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top"
)
summary(aov(P3 ~ felicidade, data = bd))
summary(aov(bd$P3~ bd$satisfacao_vida, data = bd))
valores <- as.numeric(bd$satisfacao_vida)
h <- hist(valores,
main = "Distribuição de Satisfação com a Vida",
xlab = "Satisfação com a Vida",
ylab = "Frequência",
col = "lightblue",
)
summary(aov(bd$P3~ bd$satisfacao_vida, data = bd))
etaSquared(aov(bd$P3 ~ bd$satisfacao_vida, data = bd)
etaSquared(aov(bd$P3 ~ bd$satisfacao_vida, data = bd)
etaSquared(aov(bd$P3 ~ bd$satisfacao_vida, data = bd)
boxplot(bd$P3 ~ bd$satisfacao_vida, col = "lightblue", main = "Idade por Satisfação com a Vida")
boxplot(bd$P3 ~ bd$satisfacao_vida, col = "lightblue", main = "Idade por Satisfação com a Vida")
bd_long <- pivot_longer(bd,
cols = starts_with("v"),
names_to = "sintoma",
values_to = "ansiedade")
library(ggplot2)
library(tidyr)
bd_long <- pivot_longer(bd,
cols = starts_with("v"),
names_to = "sintoma",
values_to = "ansiedade")
ggplot(bd_long, aes(x = felicidade, y = ansiedade, fill = felicidade)) +
geom_boxplot() +
facet_wrap(~ sintoma, labeller = labeller(
sintoma = c(
"v38_ansiedade" = "Boca seca",
"v40_ansiedade" = "Dificuldade respiratória",
"v43_ansiedade" = "Tremores",
"v45_ansiedade" = "Medo de constrangimento",
"v51_ansiedade" = "Quase pânico",
"v55_ansiedade" = "Coração acelerado",
"v56_ansiedade" = "Medo sem motivo"
)
)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Criar um dataframe reduzido apenas com as variáveis de interesse
dados <- bd[, c("v38_ansiedade", "v40_ansiedade", "v43_ansiedade",
"v45_ansiedade", "v51_ansiedade", "v55_ansiedade",
"v56_ansiedade", "satisfacao_vida")]
# Verificar estrutura
str(dados)
# Criar um dataframe reduzido apenas com as variáveis de interesse
dados <- bd[, c("v38_ansiedade", "v40_ansiedade", "v43_ansiedade",
"v45_ansiedade", "v51_ansiedade", "v55_ansiedade",
"v56_ansiedade", "satisfacao_vida")]
# Verificar estrutura
str(dados)
# Instalar pacotes se necessário
if(!require("Hmisc")) install.packages("Hmisc")
if(!require("corrplot")) install.packages("corrplot")
library(Hmisc)
library(corrplot)
# Calcular matriz de correlação usando Spearman (para dados ordinais)
correlacoes <- rcorr(as.matrix(dados), type = "spearman")
# Visualizar matriz de correlação
corrplot(correlacoes$r,
method = "color",
type = "upper",
tl.col = "black",
tl.srt = 45,
p.mat = correlacoes$P,
sig.level = 0.05,
insig = "blank",
diag = FALSE)
library(DescTools)
library(ggplot2)
library(flextable)
library(descr)
library(gridExtra)
#Importar os ficheiros do Excel
Sys.setlocale("LC_ALL", "Portuguese_Portugal.UTF-8")
library(openxlsx)
bd <- read.xlsx("Trabalho_ecell.xlsx")
#Mudar o nome de duas variáveis Variáveis da base de dados
colnames(bd)
names(bd)[4] = "valor_genero"
names(bd)[9] = "satisfacao_vida"
paste("Existem",sum(bd$satisfacao_vida == 99),"valores omissos")
media_antes <- mean(bd$satisfacao_vida)
n_amostra <- nrow(bd)
print(n_amostra)
bd$satisfacao_vida[bd$satisfacao_vida == 99] <- NA
bd$satisfacao_vida[is.na(bd$satisfacao_vida)] <- median(bd$satisfacao_vida, na.rm = TRUE)
media_depois <- mean(bd$satisfacao_vida)
paste("Média antes de inputar os valores omissos:",round(media_antes,2),"\n Média depois de inputar os valores omissos com mediana", round(media_depois,2))
#Lidar com os valores omissos das outras variaveis
bd$v38_ansiedade[bd$v38_ansiedade == 99] <- NA
bd$v38_ansiedade[is.na(bd$v38_ansiedade)] <- median(bd$v38_ansiedade, na.rm = TRUE)
bd$v40_ansiedade[bd$v40_ansiedade == 99] <- NA
bd$v40_ansiedade[is.na(bd$v40_ansiedade)] <- median(bd$v40_ansiedade, na.rm = TRUE)
bd$v43_ansiedade[bd$v43_ansiedade == 99] <- NA
bd$v43_ansiedade[is.na(bd$v43_ansiedade)] <- median(bd$v43_ansiedade, na.rm = TRUE)
bd$v45_ansiedade[bd$v45_ansiedade == 99] <- NA
bd$v45_ansiedade[is.na(bd$v45_ansiedade)] <- median(bd$v45_ansiedade, na.rm = TRUE)
bd$v51_ansiedade[bd$v51_ansiedade == 99] <- NA
bd$v51_ansiedade[is.na(bd$v51_ansiedade)] <- median(bd$v51_ansiedade, na.rm = TRUE)
bd$v55_ansiedade[bd$v55_ansiedade == 99] <- NA
bd$v55_ansiedade[is.na(bd$v55_ansiedade)] <- median(bd$v55_ansiedade, na.rm = TRUE)
bd$v56_ansiedade[bd$v56_ansiedade == 99] <- NA
bd$v56_ansiedade[is.na(bd$v56_ansiedade)] <- median(bd$v56_ansiedade, na.rm = TRUE)
bd$AF_Q554[bd$AF_Q554 == 99] <- NA
bd$AF_Q554[is.na(bd$AF_Q554)] <- median(bd$AF_Q554, na.rm = TRUE)
Gen <- c(unique(bd$Género))
freq_absoluta <- table(bd$Género)
# Calcular a frequência relativa (percentagem)
freq_relativa <- round(prop.table(freq_absoluta)*100)
# Criar a tabela como um data frame
tabela_frequencias <- data.frame(Género = names(freq_absoluta),
Frequência = as.vector(freq_absoluta),
Percentagem = as.vector(freq_relativa))
ftab_sexo <- flextable(head(tabela_frequencias))
ftab_sexo <- bg(ftab_sexo, bg = "#3895D3", part = "header")
ftab_sexo <- color(ftab_sexo, color = "white", part = "header")
mean(bd$P3)
ftab_sexo
plot_ciclo <- ggplot(bd, aes(x = factor(cicloescolar))) +
geom_bar(fill = c("#1f78b4", "#33a02c")) +
scale_x_discrete(labels = c("3" = "3º Ciclo", "4" = "Secundário")) +
labs(title = "Ciclo Escolar", x = "", y = "Contagem") +
theme_minimal()
# Histograma para idades inteiras
plot_idade <- ggplot(bd, aes(x = P3)) +
geom_histogram(
fill = "red",
binwidth = 1,          # Cada barra representa 1 ano inteiro
color = "black",       # Bordas pretas para destacar os intervalos
boundary = 0.5         # Alinha as barras para começar/terminar em números inteiros
) +
scale_x_continuous(
breaks = seq(floor(min(bd$P3)), ceiling(max(bd$P3))),  # Rótulos em inteiros
labels = seq(floor(min(bd$P3)), ceiling(max(bd$P3)))
) +
labs(title = "Distribuição de Idades", x = "Idade", y = "Contagem") +
theme_minimal()
# Combinar os gráficos
grid.arrange(plot_ciclo, plot_idade, ncol = 2)
# Tabela com os dados descritivos
N <- nrow(bd)
Média <- round(mean(bd$P3, na.rm = TRUE),2)
Mediana <- round(median(bd$P3, na.rm = TRUE),2)
DesPad <-round(sd(bd$P3, na.rm = TRUE),2)
Vari <- round(var(bd$P3, na.rm = TRUE),2)
Min <- round(min(bd$P3, na.rm = TRUE),2)
Max <- round(max(bd$P3, na.rm = TRUE),2)
Q1 <- round(quantile(bd$P3, 0.25, na.rm = TRUE),2)
Q3 <- round(quantile(bd$P3, 0.75, na.rm = TRUE),2)
Estatisticas_Descritivas <- c("N", "Média", "Mediana", "Desv. Pad.", "Vari.", "Min", "Max", "Q1", "Q3")
Valores_Idades <- c(N, Média, Mediana, DesPad, Vari, Min, Max, Q1, Q3)
Tabela <- data.frame(Estatisticas_Descritivas, Valores_Idades)
ftab_obj <- flextable(Tabela)
ftab_obj <- bg(ftab_obj, bg = "#3895D3", part = "header")
ftab_obj <- color(ftab_obj, color = "white", part = "header")
ftab_obj
valores <- as.numeric(bd$satisfacao_vida)
h <- hist(valores,
main = "Distribuição de Satisfação com a Vida",
xlab = "Satisfação com a Vida",
ylab = "Frequência",
col = "lightblue",
)
summary(aov(bd$P3~ bd$satisfacao_vida, data = bd))
# Tabela com os dados descritivos
Média <- round(mean(bd$satisfacao_vida, na.rm = TRUE),2)
Mediana <- round(median(bd$satisfacao_vida, na.rm = TRUE),2)
DesPad <-round(sd(bd$satisfacao_vida, na.rm = TRUE),2)
Vari <- round(var(bd$satisfacao_vida, na.rm = TRUE),2)
Min <- round(min(bd$satisfacao_vida, na.rm = TRUE),2)
Max <- round(max(bd$satisfacao_vida, na.rm = TRUE),2)
Q1 <- round(quantile(bd$satisfacao_vida, 0.25, na.rm = TRUE),2)
Q3 <- round(quantile(bd$satisfacao_vida, 0.75, na.rm = TRUE),2)
Estatisticas_Descritivas <- c("Média", "Mediana", "Desv. Pad.", "Vari.", "Min", "Max", "Q1", "Q3")
Satisfação_vida <- c(Média, Mediana, DesPad, Vari, Min, Max, Q1, Q3)
Tabela <- data.frame(Estatisticas_Descritivas, Satisfação_vida)
ftab_obj <- flextable(Tabela)
ftab_obj <- bg(ftab_obj, bg = "#3895D3", part = "header")
ftab_obj <- color(ftab_obj, color = "white", part = "header")
ftab_obj
boxplot(bd$P3 ~ bd$satisfacao_vida, col = "lightblue", main = "Idade por Satisfação com a Vida")
# Definir os 7 títulos (ou sintomas)
specie <- c(
rep("A", 4),  # 4 repetições para o título "A"
rep("B", 4),  # 4 repetições para o título "B"
rep("C", 4),  # 4 repetições para o título "C"
rep("D", 4),  # 4 repetições para o título "D"
rep("E", 4),  # 4 repetições para o título "E"
rep("F", 4),  # 4 repetições para o título "F"
rep("G", 4)   # 4 repetições para o título "G"
)
# Verificar o comprimento de 'specie'
length(specie)  # Deve retornar 28 (7 títulos * 4 géneros)
# Replicar 'bd$Género' para corresponder ao comprimento de 'specie' (4 géneros por título)
condition <- rep(bd$Género, length.out = length(specie))
mean_values <- c(mean(bd$v38_ansiedade),mean(bd$v40_ansiedade),
mean(bd$v43_ansiedade),mean(bd$v45_ansiedade),
mean(bd$v51_ansiedade),mean(bd$v55_ansiedade),
mean(bd$v56_ansiedade)
)
# Replicar as médias para corresponder ao comprimento de 'specie'
value <- rep(mean_values, length.out = length(specie))
# Criar o dataframe
data <- data.frame(specie, condition, value)
# Criar o gráfico de barras agrupadas
ggplot(data, aes(fill = condition, y = value, x = specie)) +
geom_bar(position = "dodge", stat = "identity") +
labs(
title = "Níveis de Ansiedade por Gênero",
x = "Sintomas",
y = "Média das respostas"
)
library(magrittr)
library(officer) # Certifique-se que este pacote está carregado
# Criar o dataframe
sintomas_df <- data.frame(
Sintoma = c("A", "B", "C", "D", "E", "F", "G"),
Descrição = c(
"Senti a minha boca seca.",
"Senti dificuldades em respirar.",
"Senti-me trémulo (por exemplo sem forças nas pernas).",
"Preocupei-me com situações em que podia entrar em pânico e fazer figura ridícula.",
"Senti-me quase a entrar em pânico.",
"Senti alterações no meu coração sem fazer exercício físico.",
"Senti-me assustado sem ter uma boa razão para isso."
)
)
# Criar a tabela com formatação
sintomas_table <- flextable(sintomas_df) %>%
set_header_labels(        # Ajustar os nomes das colunas
Sintoma = "Sintoma",
Descrição = "Descrição dos Sintomas"
) %>%
bg(part = "header", bg = "#1f78b4", j = 1:2) %>%
color(part = "header", color = "white", j = 1:2) %>%
bg(part = "body", bg = "#f0f0f0", i = seq(1, 7, by = 2)) %>%
add_header_lines("Sintomas de Ansiedade - Legendas") %>%
bold(part = "header", bold = TRUE) %>%
fontsize(part = "header", size = 12) %>%
align(align = "left", part = "all") %>%
set_table_properties(width = 1) %>%
theme_booktabs() %>%
autofit()
# Adicionar bordas
sintomas_table <- border_outer(sintomas_table, part = "all", border = fp_border(color = "#1f78b4", width = 1))
# Visualizar a tabela
sintomas_table
# Criar um dataframe reduzido apenas com as variáveis de interesse
dados <- bd[, c("v38_ansiedade", "v40_ansiedade", "v43_ansiedade",
"v45_ansiedade", "v51_ansiedade", "v55_ansiedade",
"v56_ansiedade", "satisfacao_vida")]
# Verificar estrutura
str(dados)
# Instalar pacotes se necessário
if(!require("Hmisc")) install.packages("Hmisc")
if(!require("corrplot")) install.packages("corrplot")
library(Hmisc)
library(corrplot)
# Calcular matriz de correlação usando Spearman (para dados ordinais)
correlacoes <- rcorr(as.matrix(dados), type = "spearman")
# Visualizar matriz de correlação
corrplot(correlacoes$r,
method = "color",
type = "upper",
tl.col = "black",
tl.srt = 45,
p.mat = correlacoes$P,
sig.level = 0.05,
insig = "blank",
diag = FALSE)
