#Importar os ficheiros do Excel
Sys.setlocale("LC_ALL", "Portuguese_Portugal.UTF-8")
library(openxlsx)
bd <- read.xlsx("Trabalho_ecell.xlsx")
head(bd)
#Importar os ficheiros do Excel
Sys.setlocale("LC_ALL", "Portuguese_Portugal.UTF-8")
library(openxlsx)
bd <- read.xlsx("Trabalho_ecell.xlsx")
head(bd)
#Mudar o nome de duas variáveis Variáveis da base de dados
colnames(bd)
names(bd)[4] = "valor_genero"
names(bd)[9] = "satisfacao_vida"
paste("Existem",sum(bd$satisfacao_vida == 99),"valores omissos")
media_antes <- mean(bd$satisfacao_vida)
bd$satisfacao_vida[bd$satisfacao_vida == 99] <- NA
bd$satisfacao_vida[is.na(bd$satisfacao_vida)] <- median(bd$satisfacao_vida, na.rm = TRUE)
media_depois <- mean(bd$satisfacao_vida)
paste("Média antes de inputar os valores omissos:",round(media_antes,2),"\n Média depois de inputar os valores omissos com mediana", round(media_depois,2))
library(DescTools)
library(flextable)
library(descr)
valores <- as.numeric(bd$satisfacao_vida)
descr(valores)
freq_abs <- table(valores)
freq_rel <- prop.table(freq_abs) * 100
tabela_freq <- data.frame(
"Valor" = names(freq_abs),
"Frequência Absoluta" = as.vector(freq_abs),
"Frequência Relativa (%)" = round(as.vector(freq_rel), 2)
)
# Exibir a tabela
tabela_freq
h <- hist(valores,
main = "Distribuição de Satisfação com a Vida",
xlab = "Satisfação com a Vida",
ylab = "Frequência",
col = "lightblue",
)
boxplot(valores,
main = "Boxplot da Satisfação com a Vida",
ylab = "Satisfação com a Vida",
col = "lightgreen")
#Importar os ficheiros do Excel
Sys.setlocale("LC_ALL", "Portuguese_Portugal.UTF-8")
library(openxlsx)
bd <- read.xlsx("Trabalho_ecell.xlsx")
head(bd)
#Importar os ficheiros do Excel
Sys.setlocale("LC_ALL", "Portuguese_Portugal.UTF-8")
library(openxlsx)
bd <- read.xlsx("Trabalho_ecell.xlsx")
head(bd)
library(DescTools)
library(flextable)
library(descr)
#Importar os ficheiros do Excel
Sys.setlocale("LC_ALL", "Portuguese_Portugal.UTF-8")
library(openxlsx)
bd <- read.xlsx("Trabalho_ecell.xlsx")
#Mudar o nome de duas variáveis Variáveis da base de dados
colnames(bd)
names(bd)[4] = "valor_genero"
names(bd)[9] = "satisfacao_vida"
paste("Existem",sum(bd$satisfacao_vida == 99),"valores omissos")
media_antes <- mean(bd$satisfacao_vida)
bd$satisfacao_vida[bd$satisfacao_vida == 99] <- NA
bd$satisfacao_vida[is.na(bd$satisfacao_vida)] <- median(bd$satisfacao_vida, na.rm = TRUE)
media_depois <- mean(bd$satisfacao_vida)
paste("Média antes de inputar os valores omissos:",round(media_antes,2),"\n Média depois de inputar os valores omissos com mediana", round(media_depois,2))
library(DescTools)
library(flextable)
library(descr)
valores <- as.numeric(bd$satisfacao_vida)
descr(valores)
freq_abs <- table(valores)
freq_rel <- prop.table(freq_abs) * 100
tabela_freq <- data.frame(
"Valor" = names(freq_abs),
"Frequência Absoluta" = as.vector(freq_abs),
"Frequência Relativa (%)" = round(as.vector(freq_rel), 2)
)
# Exibir a tabela
tabela_freq
h <- hist(valores,
main = "Distribuição de Satisfação com a Vida",
xlab = "Satisfação com a Vida",
ylab = "Frequência",
col = "lightblue",
)
boxplot(valores,
main = "Boxplot da Satisfação com a Vida",
ylab = "Satisfação com a Vida",
col = "lightgreen")
library(ggplot2)
# Definir os 7 títulos (ou sintomas)
specie <- c(
rep("A", 4),  # 4 repetições para o título "A"
rep("B", 4),  # 4 repetições para o título "B"
rep("C", 4),  # 4 repetições para o título "C"
rep("D", 4),  # 4 repetições para o título "D"
rep("E", 4),  # 4 repetições para o título "E"
rep("F", 4),  # 4 repetições para o título "F"
rep("G", 4)   # 4 repetições para o título "G"
)
# Verificar o comprimento de 'specie'
length(specie)  # Deve retornar 28 (7 títulos * 4 géneros)
# Replicar 'bd$Género' para corresponder ao comprimento de 'specie' (4 géneros por título)
condition <- rep(bd$Género, length.out = length(specie))
# Definir as médias das colunas de ansiedade
mean_values <- c(
mean(bd$v38_ansiedade),
mean(bd$v40_ansiedade),
mean(bd$v43_ansiedade),
mean(bd$v45_ansiedade),
mean(bd$v51_ansiedade),
mean(bd$v55_ansiedade),
mean(bd$v56_ansiedade)
)
# Replicar as médias para corresponder ao comprimento de 'specie'
value <- rep(mean_values, length.out = length(specie))
# Criar o dataframe
data <- data.frame(specie, condition, value)
# Criar o gráfico de barras agrupadas
ggplot(data, aes(fill = condition, y = value, x = specie)) +
geom_bar(position = "dodge", stat = "identity") +
labs(
title = "Níveis de Ansiedade por Gênero",
x = "Sintomas",
y = "Média de Ansiedade"
)
View(tabela_freq)
View(tabela_freq)
View(h)
View(data)
View(bd)
names[bd]
names(bd)
library(DescTools)
library(flextable)
library(descr)
#Importar os ficheiros do Excel
Sys.setlocale("LC_ALL", "Portuguese_Portugal.UTF-8")
library(openxlsx)
bd <- read.xlsx("Trabalho_ecell.xlsx")
#Mudar o nome de duas variáveis Variáveis da base de dados
colnames(bd)
names(bd)[4] = "valor_genero"
names(bd)[9] = "satisfacao_vida"
paste("Existem",sum(bd$satisfacao_vida == 99),"valores omissos")
media_antes <- mean(bd$satisfacao_vida)
bd$satisfacao_vida[bd$satisfacao_vida == 99] <- NA
bd$satisfacao_vida[is.na(bd$satisfacao_vida)] <- median(bd$satisfacao_vida, na.rm = TRUE)
media_depois <- mean(bd$satisfacao_vida)
paste("Média antes de inputar os valores omissos:",round(media_antes,2),"\n Média depois de inputar os valores omissos com mediana", round(media_depois,2))
#Lidar com os valores omissos das outras variaveis
bd$v38_ansiedade[bd$v38_ansiedade == 99] <- NA
bd$v38_ansiedade[is.na(bd$v38_ansiedade)] <- median(bd$v38_ansiedade, na.rm = TRUE)
bd$v40_ansiedade[bd$v40_ansiedade == 99] <- NA
bd$v40_ansiedade[is.na(bd$v40_ansiedade)] <- median(bd$v40_ansiedade, na.rm = TRUE)
bd$v43_ansiedade[bd$v43_ansiedade == 99] <- NA
bd$v43_ansiedade[is.na(bd$v43_ansiedade)] <- median(bd$v43_ansiedade, na.rm = TRUE)
bd$v45_ansiedade[bd$v45_ansiedade == 99] <- NA
bd$v45_ansiedade[is.na(bd$v45_ansiedade)] <- median(bd$v45_ansiedade, na.rm = TRUE)
bd$v51_ansiedade[bd$v51_ansiedade == 99] <- NA
bd$v51_ansiedade[is.na(bd$v51_ansiedade)] <- median(bd$v51_ansiedade, na.rm = TRUE)
bd$v55_ansiedade[bd$v55_ansiedade == 99] <- NA
bd$v55_ansiedade[is.na(bd$v55_ansiedade)] <- median(bd$v55_ansiedade, na.rm = TRUE)
bd$v56_ansiedade[bd$v56_ansiedade == 99] <- NA
bd$v56_ansiedade[is.na(bd$v56_ansiedade)] <- median(bd$v56_ansiedade, na.rm = TRUE)
bd$AF_Q554[bd$AF_Q554 == 99] <- NA
bd$AF_Q554[is.na(bd$AF_Q554)] <- median(bd$AF_Q554, na.rm = TRUE)
#Frequencia de idades
h <- hist(valores,
main = "Distribuição da idade",
xlab = "P3",
ylab = "Frequência",
col = "lightblue",
)
```{r, include=TRUE, echo=FALSE}
h <- hist(valores,
main = "Distribuição de Satisfação com a Vida",
xlab = "Satisfação com a Vida",
ylab = "Frequência",
col = "lightblue",
)
names("P3")
bd[$P3]
bd[$"P3"]
bd([)$"P3")
bd($"P3")
bd$P3
h <- hist(valores,
main = "Distribuição da idade",
xlab = "P3",
ylab = "Frequência",
col = "lightblue",
)
h <- hist(valores,
main = "Distribuição da idade",
xlab = "P3",
ylab = "Frequência",
col = "green",
)
valores <- as.numeric(bd$P3)
h <- hist(valores,
main = "Distribuição da idade",
xlab = "P3",
ylab = "Frequência",
col = "green",
)
library(DescTools)
library(flextable)
library(descr)
#Importar os ficheiros do Excel
Sys.setlocale("LC_ALL", "Portuguese_Portugal.UTF-8")
library(openxlsx)
bd <- read.xlsx("Trabalho_ecell.xlsx")
#Mudar o nome de duas variáveis Variáveis da base de dados
colnames(bd)
names(bd)[4] = "valor_genero"
names(bd)[9] = "satisfacao_vida"
paste("Existem",sum(bd$satisfacao_vida == 99),"valores omissos")
media_antes <- mean(bd$satisfacao_vida)
bd$satisfacao_vida[bd$satisfacao_vida == 99] <- NA
bd$satisfacao_vida[is.na(bd$satisfacao_vida)] <- median(bd$satisfacao_vida, na.rm = TRUE)
media_depois <- mean(bd$satisfacao_vida)
paste("Média antes de inputar os valores omissos:",round(media_antes,2),"\n Média depois de inputar os valores omissos com mediana", round(media_depois,2))
#Lidar com os valores omissos das outras variaveis
bd$v38_ansiedade[bd$v38_ansiedade == 99] <- NA
bd$v38_ansiedade[is.na(bd$v38_ansiedade)] <- median(bd$v38_ansiedade, na.rm = TRUE)
bd$v40_ansiedade[bd$v40_ansiedade == 99] <- NA
bd$v40_ansiedade[is.na(bd$v40_ansiedade)] <- median(bd$v40_ansiedade, na.rm = TRUE)
bd$v43_ansiedade[bd$v43_ansiedade == 99] <- NA
bd$v43_ansiedade[is.na(bd$v43_ansiedade)] <- median(bd$v43_ansiedade, na.rm = TRUE)
bd$v45_ansiedade[bd$v45_ansiedade == 99] <- NA
bd$v45_ansiedade[is.na(bd$v45_ansiedade)] <- median(bd$v45_ansiedade, na.rm = TRUE)
bd$v51_ansiedade[bd$v51_ansiedade == 99] <- NA
bd$v51_ansiedade[is.na(bd$v51_ansiedade)] <- median(bd$v51_ansiedade, na.rm = TRUE)
bd$v55_ansiedade[bd$v55_ansiedade == 99] <- NA
bd$v55_ansiedade[is.na(bd$v55_ansiedade)] <- median(bd$v55_ansiedade, na.rm = TRUE)
bd$v56_ansiedade[bd$v56_ansiedade == 99] <- NA
bd$v56_ansiedade[is.na(bd$v56_ansiedade)] <- median(bd$v56_ansiedade, na.rm = TRUE)
bd$AF_Q554[bd$AF_Q554 == 99] <- NA
bd$AF_Q554[is.na(bd$AF_Q554)] <- median(bd$AF_Q554, na.rm = TRUE)
#Frequencia de idades
valores <- as.numeric(bd$P3)
h <- hist(valores,
main = "Distribuição da idade",
xlab = "P3",
ylab = "Frequência",
col = "green",
)
library(DescTools)
library(flextable)
library(descr)
valores <- as.numeric(bd$satisfacao_vida)
descr(valores)
freq_abs <- table(valores)
freq_rel <- prop.table(freq_abs) * 100
tabela_freq <- data.frame(
"Valor" = names(freq_abs),
"Frequência Absoluta" = as.vector(freq_abs),
"Frequência Relativa (%)" = round(as.vector(freq_rel), 2)
)
# Exibir a tabela
tabela_freq
h <- hist(valores,
main = "Distribuição de Satisfação com a Vida",
xlab = "Satisfação com a Vida",
ylab = "Frequência",
col = "lightblue",
)
boxplot(valores,
main = "Boxplot da Satisfação com a Vida",
ylab = "Satisfação com a Vida",
col = "lightgreen")
library(ggplot2)
# Definir os 7 títulos (ou sintomas)
specie <- c(
rep("A", 4),  # 4 repetições para o título "A"
rep("B", 4),  # 4 repetições para o título "B"
rep("C", 4),  # 4 repetições para o título "C"
rep("D", 4),  # 4 repetições para o título "D"
rep("E", 4),  # 4 repetições para o título "E"
rep("F", 4),  # 4 repetições para o título "F"
rep("G", 4)   # 4 repetições para o título "G"
)
# Verificar o comprimento de 'specie'
length(specie)  # Deve retornar 28 (7 títulos * 4 géneros)
# Replicar 'bd$Género' para corresponder ao comprimento de 'specie' (4 géneros por título)
condition <- rep(bd$Género, length.out = length(specie))
# Definir as médias das colunas de ansiedade
mean_values <- c(
mean(bd$v38_ansiedade),
mean(bd$v40_ansiedade),
mean(bd$v43_ansiedade),
mean(bd$v45_ansiedade),
mean(bd$v51_ansiedade),
mean(bd$v55_ansiedade),
mean(bd$v56_ansiedade)
)
# Replicar as médias para corresponder ao comprimento de 'specie'
value <- rep(mean_values, length.out = length(specie))
# Criar o dataframe
data <- data.frame(specie, condition, value)
# Criar o gráfico de barras agrupadas
ggplot(data, aes(fill = condition, y = value, x = specie)) +
geom_bar(position = "dodge", stat = "identity") +
labs(
title = "Níveis de Ansiedade por Gênero",
x = "Sintomas",
y = "Média de Ansiedade"
)
#Tabela entre idades e ansiedades
library(ggplot2)
# Definir os 7 títulos (ou sintomas)
specie <- c(
rep("A", 4),  # 4 repetições para o título "A"
rep("B", 4),  # 4 repetições para o título "B"
rep("C", 4),  # 4 repetições para o título "C"
rep("D", 4),  # 4 repetições para o título "D"
rep("E", 4),  # 4 repetições para o título "E"
rep("F", 4),  # 4 repetições para o título "F"
rep("G", 4)   # 4 repetições para o título "G"
)
# Verificar o comprimento de 'specie'
length(specie)  # Deve retornar 28 (7 títulos * 4 géneros)
# Replicar 'bd$Género' para corresponder ao comprimento de 'specie' (4 géneros por título)
condition <- rep(bd$P3, length.out = length(specie))
# Definir as médias das colunas de ansiedade
mean_values <- c(
mean(bd$v38_ansiedade),
mean(bd$v40_ansiedade),
mean(bd$v43_ansiedade),
mean(bd$v45_ansiedade),
mean(bd$v51_ansiedade),
mean(bd$v55_ansiedade),
mean(bd$v56_ansiedade)
)
# Replicar as médias para corresponder ao comprimento de 'specie'
value <- rep(mean_values, length.out = length(specie))
# Criar o dataframe
data <- data.frame(specie, condition, value)
# Criar o gráfico de barras agrupadas
ggplot(data, aes(fill = condition, y = value, x = specie)) +
geom_bar(position = "dodge", stat = "identity") +
labs(
title = "Níveis de Ansiedade por Idade",
x = "Sintomas",
y = "Média de Ansiedade"
)
library(ggplot2)
# Definir os 7 títulos (ou sintomas)
specie <- c(
rep("A", 4),  # 4 repetições para o título "A"
rep("B", 4),  # 4 repetições para o título "B"
rep("C", 4),  # 4 repetições para o título "C"
rep("D", 4),  # 4 repetições para o título "D"
rep("E", 4),  # 4 repetições para o título "E"
rep("F", 4),  # 4 repetições para o título "F"
rep("G", 4)   # 4 repetições para o título "G"
)
# Verificar o comprimento de 'specie'
length(specie)  # Deve retornar 28 (7 títulos * 4 géneros)
# Replicar 'bd$Género' para corresponder ao comprimento de 'specie' (4 géneros por título)
condition <- rep(bd$Género, length.out = length(specie))
# Replicar as médias para corresponder ao comprimento de 'specie'
value <- rep(mean_values, length.out = length(specie))
# Criar o dataframe
data <- data.frame(specie, condition, value)
# Criar o gráfico de barras agrupadas
ggplot(data, aes(fill = condition, y = value, x = specie)) +
geom_bar(position = "dodge", stat = "identity") +
labs(
title = "Níveis de Ansiedade por Gênero",
x = "Sintomas",
y = "Média de Ansiedade"
)
